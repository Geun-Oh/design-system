/** @jsxImportSource @emotion/react */
import React from 'react';
import { jsx, css, keyframes } from '@emotion/react';
import { BaseStyles } from "../themes";

type TypeProps = 'angleDown' | "home" | "file" | "chat" | "chart" | "checkout" | "loading" | "none";

export interface IconProps {
    type: TypeProps;
    scale?: number;
}

export const Icon = ({ type, scale }: IconProps) => {
        switch (type) {
            case "angleDown":
                return (
                        <svg width="10" height="12" viewBox="0 0 10 12" fill="none" xmlns="http://www.w3.org/2000/svg" css={scaleControl(scale)}>
                    <g clip-path="url(#clip0_8_3734)">
                        <path d="M4.99996 9C4.78673 9 4.5734 8.92676 4.4109 8.78027L0.244232 5.03027C-0.0812887 4.7373 -0.0812887 4.2627 0.244232 3.96973C0.569753 3.67676 1.0971 3.67676 1.42262 3.96973L4.99996 7.19062L8.57809 3.97031C8.90361 3.67734 9.43095 3.67734 9.75647 3.97031C10.082 4.26328 10.082 4.73789 9.75647 5.03086L5.58981 8.78086C5.42704 8.92734 5.2135 9 4.99996 9Z" fill="black" />
                    </g>
                    <defs>
                        <clipPath id="clip0_8_3734">
                            <rect width="10" height="12" fill="white" />
                        </clipPath>
                    </defs>
                    </svg>
                )
            case "home":
                return (
                    <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" css={scaleControl(scale)}>
                        <path d="M11.9958 5.98828C11.9958 6.41016 11.6833 6.74063 11.3292 6.74063H10.6625L10.6771 10.493C10.6771 10.5586 10.6729 10.6195 10.6667 10.6828V11.0625C10.6667 11.5805 10.2937 12 9.83333 12H9.5C9.47708 12 9.45417 11.9789 9.43125 11.9977C9.40208 11.9789 9.37292 12 9.34375 12H8.16667C7.70625 12 7.33333 11.5805 7.33333 11.0625V9C7.33333 8.58516 7.03542 8.25 6.66667 8.25H5.33333C4.96458 8.25 4.66667 8.58516 4.66667 9V11.0625C4.66667 11.5805 4.29375 12 3.83333 12H2.66875C2.6375 12 2.60625 11.9977 2.575 11.9953C2.55 11.9977 2.525 12 2.5 12H2.16667C1.70646 12 1.33333 11.5805 1.33333 11.0625V8.4375C1.33333 8.41641 1.33396 8.39297 1.33521 8.37188V6.74063H0.667708C0.292083 6.74063 0 6.41016 0 5.98828C0 5.77734 0.0625833 5.58984 0.208542 5.42578L5.55 0.187875C5.69583 0.0234844 5.8625 0 6.00833 0C6.15417 0 6.32083 0.0469687 6.44792 0.164391L11.7667 5.42578C11.9333 5.58984 12.0187 5.77734 11.9958 5.98828Z" fill="black" />
                    </svg>
                )
            case "file":
                return (
                    <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" css={scaleControl(scale)}>
                        <path d="M0 1.5C0 0.671484 0.895313 0 2 0H7V3C7 3.41484 7.44687 3.75 8 3.75H12V10.5C12 11.3273 11.1031 12 10 12H2C0.895313 12 0 11.3273 0 10.5V1.5ZM8 3V0L12 3H8Z" fill="black" />
                    </svg>
                )
            case "chat":
                return (
                    <svg width="12" height="11" viewBox="0 0 12 11" fill="none" xmlns="http://www.w3.org/2000/svg" css={scaleControl(scale)}>
                        <path d="M5.97949 0C2.66543 0 0.000586035 2.1825 0.000586035 4.875C0.000586035 6.03797 0.500977 7.10109 1.33582 7.93828C1.04285 9.11883 0.0638673 10.1712 0.0521485 10.1829C-0.000585843 10.2356 -0.0152343 10.3173 0.0169923 10.3876C0.0462657 10.4579 0.111234 10.4993 0.187406 10.4993C1.74014 10.4993 2.88506 9.75492 3.48272 9.29484C4.24748 9.58195 5.10038 9.7493 5.99991 9.7493C9.31397 9.7493 11.9788 7.56656 11.9788 4.89539C11.9788 2.22422 9.29356 0 5.97949 0ZM2.9584 5.625C2.54238 5.625 2.2084 5.29102 2.2084 4.89609C2.2084 4.50117 2.54238 4.14609 2.9584 4.14609C3.37441 4.14609 3.7084 4.48008 3.7084 4.89609C3.7084 5.31211 3.39434 5.625 2.9584 5.625ZM5.97949 5.625C5.56348 5.625 5.25059 5.29102 5.25059 4.89609C5.25059 4.50117 5.58457 4.14609 5.97949 4.14609C6.37441 4.14609 6.7084 4.48008 6.7084 4.89609C6.7084 5.31211 6.39668 5.625 5.97949 5.625ZM8.9584 5.625C8.54238 5.625 8.2084 5.29102 8.2084 4.89609C8.2084 4.50117 8.54238 4.14609 8.9584 4.14609C9.37441 4.14609 9.7084 4.48008 9.7084 4.89609C9.7084 5.31211 9.39434 5.625 8.9584 5.625Z" fill="black" />
                    </svg>
                )
            case "chart":
                return (
                    <svg width="12" height="11" viewBox="0 0 12 11" fill="none" xmlns="http://www.w3.org/2000/svg" css={scaleControl(scale)}>
                        <path d="M1.5 9.1243C1.5 9.33055 1.66781 9.4993 1.875 9.4993H11.25C11.6648 9.4993 12 9.83445 12 10.2493C12 10.6641 11.6648 10.9993 11.25 10.9993H1.875C0.839531 10.9993 0 10.1602 0 9.1243V1.2493C0 0.835157 0.335859 0.499298 0.75 0.499298C1.16414 0.499298 1.5 0.835157 1.5 1.2493V9.1243ZM8.02969 6.27899C7.73672 6.57195 7.26328 6.57195 6.97031 6.27899L5.625 4.93602L3.52969 7.02899C3.23672 7.32195 2.76328 7.32195 2.47031 7.02899C2.17688 6.73602 2.17688 6.26258 2.47031 5.96961L5.09531 3.34461C5.38828 3.05164 5.86172 3.05164 6.15469 3.34461L7.5 4.68758L9.97031 2.21961C10.2633 1.92617 10.7367 1.92617 11.0297 2.21961C11.3227 2.51258 11.3227 2.98602 11.0297 3.27899L8.02969 6.27899Z" fill="black" />
                    </svg>
                )
            case "checkout":
                return (
                    <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" css={scaleControl(scale)}>
                        <path d="M4.28571 0.749298V1.4993H7.71429V0.749298C7.71429 0.335157 8.09732 -0.000701904 8.57143 -0.000701904C9.04554 -0.000701904 9.42857 0.335157 9.42857 0.749298V1.4993H10.7143C11.4241 1.4993 12 2.00297 12 2.6243V3.7493H0V2.6243C0 2.00297 0.575625 1.4993 1.28571 1.4993H2.57143V0.749298C2.57143 0.335157 2.95446 -0.000701904 3.42857 -0.000701904C3.90268 -0.000701904 4.28571 0.335157 4.28571 0.749298ZM0 4.4993H12V10.8743C12 11.4954 11.4241 11.9993 10.7143 11.9993H1.28571C0.575625 11.9993 0 11.4954 0 10.8743V4.4993ZM8.78839 7.12664C9.06161 6.92742 9.06161 6.57117 8.78839 6.35086C8.56071 6.13289 8.15357 6.13289 7.90179 6.35086L5.35714 8.57977L4.07411 7.47586C3.84643 7.25789 3.43929 7.25789 3.1875 7.47586C2.93839 7.69617 2.93839 8.05242 3.1875 8.25164L4.90179 9.75164C5.15357 9.9907 5.56071 9.9907 5.78839 9.75164L8.78839 7.12664Z" fill="black" />
                    </svg>
                )
            case "loading":
                return (
                    <div css={rotateCss}>
                        <svg width="12" height="12" viewBox="0 0 12 12" fill="none" xmlns="http://www.w3.org/2000/svg" css={scaleControl(scale)}>
                            <path d="M7.125 1.125C7.125 1.74633 6.62109 2.25 6 2.25C5.37891 2.25 4.875 1.74633 4.875 1.125C4.875 0.503672 5.37891 0 6 0C6.62109 0 7.125 0.503672 7.125 1.125ZM7.125 10.875C7.125 11.4961 6.62109 12 6 12C5.37891 12 4.875 11.4961 4.875 10.875C4.875 10.2539 5.37891 9.75 6 9.75C6.62109 9.75 7.125 10.2539 7.125 10.875ZM0 6C0 5.37891 0.503672 4.875 1.125 4.875C1.74633 4.875 2.25 5.37891 2.25 6C2.25 6.62109 1.74633 7.125 1.125 7.125C0.503672 7.125 0 6.62109 0 6ZM12 6C12 6.62109 11.4961 7.125 10.875 7.125C10.2539 7.125 9.75 6.62109 9.75 6C9.75 5.37891 10.2539 4.875 10.875 4.875C11.4961 4.875 12 5.37891 12 6ZM1.75734 10.2422C1.31789 9.80391 1.31789 9.09141 1.75734 8.65078C2.1968 8.2125 2.90859 8.2125 3.34922 8.65078C3.7875 9.09141 3.7875 9.80391 3.34922 10.2422C2.90859 10.6828 2.1968 10.6828 1.75734 10.2422ZM3.34922 3.34922C2.90859 3.7875 2.1968 3.7875 1.75734 3.34922C1.31813 2.90859 1.31813 2.1968 1.75734 1.75734C2.1968 1.31789 2.90859 1.31789 3.34922 1.75734C3.7875 2.1968 3.7875 2.90859 3.34922 3.34922ZM8.65078 8.65078C9.09141 8.2125 9.80391 8.2125 10.2422 8.65078C10.6828 9.09141 10.6828 9.80391 10.2422 10.2422C9.80391 10.6828 9.09141 10.6828 8.65078 10.2422C8.2125 9.80391 8.2125 9.09141 8.65078 8.65078Z" fill="#FF5C00"/>
                        </svg>
                    </div>
                )
            case "none":
                return null;
            default:
                return null;
        }
}

Icon.defaultProps = {
    type: 'home'
};

const scaleControl = (scale) => css`
    transform: scale(${scale});
`

const rotate = keyframes`
    100% {
        transform: rotate(360deg);
    }
`

const rotateCss = css`
animation: ${rotate} 2s ease infinite;
`